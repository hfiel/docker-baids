#!/bin/bash 

function docker-container-grep() {
    PATTERN=$@
    docker ps | grep $PATTERN | grep -v ^CONTAINER
}

function docker-container-kill-pattern() {
    PATTERN=$@
    docker-container-grep $PATTERN | awk '{print $1}' | xargs -r docker kill
}

function docker-container-most-recent() {

    docker ps | grep -v ^CONTAINER | head -n1 | awk '{print $1}'

}

function docker-container-most-recent-killed() {

    docker ps -a | grep Exited | head -n1 | awk '{print $1}'

}

function docker-container-diff-most-recent() {

    LAST_CONTAINER=$(docker-container-most-recent)

    if [ ! -z "$LAST_CONTAINER" ]
    then
        docker diff $LAST_CONTAINER
    else
        echo "There are no running containers!"
    fi

}

function docker-container-ip() {

    CONTAINER_ID=$1
    if [ -z "$CONTAINER_ID" ]
    then
        CONTAINER_ID=$(docker-container-most-recent)
    fi
    if [ ! -z "$CONTAINER_ID" ]
    then
        docker inspect --format '{{ .NetworkSettings.IPAddress }}' $CONTAINER_ID
    else
        echo "There are no running containers!"
    fi

}

function docker-container-inspect-most-recent() {

    LAST_CONTAINER=$(docker-container-most-recent)
    if [ ! -z "$LAST_CONTAINER" ]
    then
        docker inspect $LAST_CONTAINER
    else
        echo "There are no running containers!"
    fi

}

function docker-container-remove-all() {

    docker ps -a | grep -v ^CONTAINER | awk '{print $1}' | xargs -rI % sh -c "docker kill %; docker rm %"

}

function docker-container-remove-all-non-running() {

    docker ps -a | grep -v ^CONTAINER | grep Exit | awk '{print $1}' | xargs -rI % sh -c "docker kill %; docker rm %"

}

function docker-image-grep () {
    PATTERN=$@
    docker images | grep $PATTERN | grep -v ^REPOSITORY
}

function docker-image-most-recent() {
    
    docker images | grep -v ^REPOSITORY | head -n1 | awk '{print $3}'

}

function docker-image-remove-all() {

    docker-container-remove-all
    docker images -a | grep -v ^REPOSITORY | awk '{print $3}' | xargs -r docker rmi

}

function docker-image-remove-orphan() {

    docker images | grep "<none>" | awk '{print $3}' | xargs -r docker rmi

}

function docker-image-remove-pattern() {
    PATTERN=$@
    docker-images-grep $PATTERN | awk '{print $1}' | xargs -r docker rmi
}
